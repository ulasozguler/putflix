{"version":3,"sources":["actions/index.js","reducers/user.js","reducers/file.js","reducers/video.js","reducers/index.js","store.js","constants.js","components/user-box.js","lib/putio.js","actions/file.js","utils/filesize.js","components/explorer.js","actions/videos.js","components/settings.js","lib/tmdb.js","components/movie.js","components/browser.js","app.js","actions/user.js","components/homepage.js","index.js","lib/oauth2.js"],"names":["action_types","FETCH_USER","FETCH_FILE","FETCH_VIDEO","CLEAR_VIDEO","initialState","loading","data","userReducer","state","action","type","payload","fileReducer","fileId","parent","files","file_count","total","videoReducer","id","reducers","combineReducers","user","file","video","store","createStore","applyMiddleware","thunkMiddleware","PUTIO_CLIENT_ID","PUTIO_VIDEO_URL","DEFAULT_FOLDER_KEY","UserBox","props","username","className","to","onClick","defFolder","localStorage","getItem","clear","setItem","window","location","href","putio","PutioAPI","clientID","recursiveVideos","cb","this","Files","Query","then","resp","file_type","f","bind","fileFetched","humanFileSize","bytes","precision","thresh","units","Math","abs","u","r","round","length","toFixed","ExplorerBare","isExpanded","name","isFolder","isRoot","size","getChildren","shouldFetchChildren","fetchFile","config","forceUpdate","e","expandFolder","stopPropagation","children","selectHandler","clearVideoData","clickHandler","isExpandable","selectionHandler","selectedId","toString","map","child","Explorer","Component","mapDispatchToProps","dispatch","connect","Settings","fileType","getDefaultFolder","req","path","params","fetch","URLSearchParams","response","json","Movie","movie","found","isCastVisible","cleanTitle","rChar","replaceAll","match","trim","slice","result","Object","assign","done","applyCast","applyMedia","year","parseTitle","title","applyTMDB","total_results","results","toUpperCase","filtered","filter","item","original_title","reduce","a","b","vote_count","process_search","target","rel","backdropUrl","backdrop_path","poster_path","style","backgroundImage","vote_average","genres","genre","alt","src","overview","imdb_id","videos","site","key","cast","actor","profile_path","toggleCast","BrowserBare","fetchVideos","getDefaultFolderId","keys","values","sort","created_at","localeCompare","isFolderSet","getVideos","folderId","videosFetched","Browser","AppBare","fetchUser","basename","exact","component","User","Info","info","App","Homepage","authUrl","oauth2","_state_key","_access_token_key","random","substring","response_type","client_id","_getState","auth_url","search","get","token","hash","isLoggedIn","setToken","getToken","handleCallback","render","getAuthUrl","document","getElementById"],"mappings":"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","file":"static/js/main.c857ed3d.chunk.js","sourcesContent":["const action_types = {\r\n  FETCH_USER: \"FETCH_USER\",\r\n  FETCH_FILE: \"FETCH_FILE\",\r\n  FETCH_VIDEO: \"FETCH_VIDEO\",\r\n  CLEAR_VIDEO: \"CLEAR_VIDEO\"\r\n}\r\n\r\nexport default action_types","import action_types from 'actions'\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  data: {}\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case action_types.FETCH_USER:\r\n      return action.payload\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default userReducer","import action_types from 'actions'\r\n\r\nconst initialState = {}\r\n\r\nconst fileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case action_types.FETCH_FILE:\r\n      return {\r\n        ...state,\r\n        [action.payload.fileId]: {\r\n          ...action.payload.data.parent,\r\n          files: action.payload.data.files,\r\n          file_count: action.payload.data.total\r\n        }\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default fileReducer","import action_types from 'actions'\r\n\r\nconst initialState = {}\r\n\r\nconst videoReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case action_types.FETCH_VIDEO:\r\n      return {\r\n        ...state,\r\n        [action.payload.id]: action.payload\r\n      }\r\n\r\n    case action_types.CLEAR_VIDEO:\r\n      return {}\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default videoReducer","import { combineReducers } from 'redux'\r\nimport userReducer from 'reducers/user'\r\nimport fileReducer from 'reducers/file'\r\nimport videoReducer from 'reducers/video'\r\n\r\nexport const reducers = combineReducers({\r\n  user: userReducer,\r\n  file: fileReducer,\r\n  video: videoReducer\r\n})","import thunkMiddleware from 'redux-thunk'\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport { reducers } from './reducers'\r\n\r\nexport const store = createStore(\r\n  reducers,\r\n  applyMiddleware(\r\n    thunkMiddleware\r\n  )\r\n)\r\n","export const PUTIO_AUTH_URL = 'https://api.put.io/v2/oauth2/authenticate'\r\nexport const PUTIO_CLIENT_ID = '4924'\r\nexport const PUTIO_VIDEO_URL = 'https://app.put.io/files/'\r\n\r\nexport const DEFAULT_FOLDER_KEY = 'putflix-folder'\r\n\r\n// tmdb doesn't have a rate limit, so exposing token is fine.\r\nexport const TMDB_TOKEN = '0226d6c251ad9cbce59f3400d02d75d4'\r\nexport const TMDB_API_BASE = 'https://api.themoviedb.org/3/'\r\nexport const TMDB_BACKDROP_BASE = 'https://image.tmdb.org/t/p/w1280'\r\nexport const TMDB_POSTER_BASE = 'https://image.tmdb.org/t/p/w185'\r\nexport const TMDB_ACTOR_BASE = 'https://image.tmdb.org/t/p/w138_and_h175_face'\r\n\r\nexport const YOUTUBE_ICON = 'https://www.svgrepo.com/show/13671/youtube.svg'\r\nexport const IMDB_ICON = 'https://www.svgrepo.com/show/349409/imdb.svg'","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { DEFAULT_FOLDER_KEY } from '../constants'\r\n\r\nfunction UserBox(props) {\r\n  if (props.user.loading)\r\n    return <div id=\"userBox\">Loading...</div>\r\n\r\n  function logout() {\r\n    var defFolder = localStorage.getItem(DEFAULT_FOLDER_KEY)\r\n    localStorage.clear()\r\n    localStorage.setItem(DEFAULT_FOLDER_KEY, defFolder)\r\n    window.location.href = '/putflix'\r\n  }\r\n\r\n  return (\r\n    <div id=\"userBox\">\r\n      {props.user.data.username}\r\n      <Link className=\"link\" to=\"/settings\">Settings</Link>\r\n      <span className=\"link\" onClick={logout}>Logout</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserBox","import { PUTIO_CLIENT_ID } from '../constants'\r\nimport PutioAPI from '@putdotio/api-client'\r\n\r\nconst putio = new PutioAPI({ clientID: PUTIO_CLIENT_ID })\r\n\r\nfunction recursiveVideos(id, cb) {\r\n  this.Files.Query(id)\r\n    .then(\r\n      resp => {\r\n        var file_type = resp.data.parent.file_type\r\n        if (file_type === 'FOLDER') {\r\n          for (let f of resp.data.files)\r\n            this.recursiveVideos(f.id, cb)\r\n        } else if (file_type === 'VIDEO') {\r\n          cb(resp.data.parent)\r\n        }\r\n      }\r\n    )\r\n}\r\n\r\nputio.recursiveVideos = recursiveVideos.bind(putio)\r\n\r\nexport default putio","import action_types from 'actions'\r\nimport putio from 'lib/putio'\r\n\r\nexport function fileFetched(fileId, data) {\r\n  return {\r\n    type: action_types.FETCH_FILE,\r\n    payload: {\r\n      fileId, data\r\n    }\r\n  }\r\n}\r\n\r\nexport function fetchFile(fileId = 0, config = {}) {\r\n  return dispatch => {\r\n    return putio.Files.Query(fileId, config)\r\n      .then(resp => {\r\n        dispatch(fileFetched(fileId, resp.data))\r\n      })\r\n  }\r\n}","export function humanFileSize(bytes, precision = 2) {\r\n  const thresh = 1024;\r\n  const units = ['B', 'KB', 'MB', 'GB', 'TB', 'PB']\r\n\r\n  if (bytes === 0) {\r\n    return 'empty'\r\n  }\r\n\r\n  if (Math.abs(bytes) < thresh) {\r\n    return bytes + units[0];\r\n  }\r\n\r\n  let u = 0;\r\n  const r = 10 ** precision;\r\n\r\n  do {\r\n    bytes /= thresh;\r\n    ++u;\r\n  } while (Math.round(Math.abs(bytes) * r) / r >= thresh && u < units.length - 1);\r\n\r\n\r\n  return bytes.toFixed(precision) + units[u];\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { fetchFile } from 'actions/file'\r\nimport { clearVideoData } from 'actions/videos'\r\nimport { humanFileSize } from 'utils/filesize'\r\n\r\nclass ExplorerBare extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.file = this.props.file\r\n    this.isExpanded = false\r\n    if (!this.file) {\r\n      this.file = {\r\n        id: 0,\r\n        file_type: 'FOLDER',\r\n        name: 'Your Files'\r\n      }\r\n    }\r\n  }\r\n\r\n  isFolder() {\r\n    return this.file.file_type === 'FOLDER'\r\n  }\r\n\r\n  isRoot() {\r\n    return this.file.id === 0\r\n  }\r\n\r\n  isExpandable() {\r\n    return this.isFolder() && !this.isRoot()\r\n  }\r\n\r\n  shouldFetchChildren() {\r\n    return (\r\n      this.isFolder() &&\r\n      this.file.size !== 0 &&\r\n      this.getChildren().length === 0\r\n    )\r\n  }\r\n\r\n  expandFolder() {\r\n    if (this.shouldFetchChildren()) {\r\n      this.props.fetchFile(this.file.id, this.props.config)\r\n      this.isExpanded = true\r\n    } else {\r\n      this.isExpanded = !this.isExpanded\r\n      this.forceUpdate()\r\n    }\r\n  }\r\n\r\n  clickHandler(e) {\r\n    if (this.isFolder())\r\n      this.expandFolder()\r\n    e.stopPropagation()\r\n  }\r\n\r\n  getChildren() {\r\n    var children = []\r\n    if (this.props.data[this.file.id])\r\n      children = this.props.data[this.file.id].files\r\n    return children\r\n  }\r\n\r\n  selectionHandler(e) {\r\n    if (this.props.selectHandler) {\r\n      this.props.clearVideoData()\r\n      this.props.selectHandler(this.file)\r\n    }\r\n    e.stopPropagation()\r\n    window.location.href = '/putflix'\r\n  }\r\n\r\n  render() {\r\n    if (this.isRoot() && !this.isExpanded) {\r\n      this.expandFolder()\r\n    }\r\n    return (\r\n      <div\r\n        className=\"folder\"\r\n        onClick={this.clickHandler.bind(this)}\r\n      >\r\n        <div className={\"name\" + (this.isExpandable() && ' clickable')}>\r\n          <span\r\n            className=\"selector\"\r\n            onClick={this.selectionHandler.bind(this)}\r\n          >\r\n            {this.props.selectedId === this.file.id.toString() ?\r\n              '[Selected]' : '[Select]'}\r\n          </span>\r\n          {this.file.name}\r\n          {!this.isRoot() &&\r\n            <span className=\"fileSize\">\r\n              ({humanFileSize(this.file.size)})\r\n            </span>\r\n          }\r\n        </div>\r\n        {this.isExpanded && (\r\n          <div className=\"children\">\r\n            {this.getChildren().map(child => {\r\n              return <Explorer\r\n                key={child.id}\r\n                file={child}\r\n                config={this.props.config}\r\n                selectHandler={this.props.selectHandler}\r\n                selectedId={this.props.selectedId}\r\n              />\r\n            })}\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// redux\r\nconst mapStateToProps = (state) => ({\r\n  data: state.file\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  fetchFile,\r\n  clearVideoData\r\n}\r\n\r\nconst Explorer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ExplorerBare)\r\n\r\nexport default Explorer","import action_types from 'actions'\r\nimport putio from 'lib/putio'\r\n\r\nexport function videosFetched(video) {\r\n  return {\r\n    type: action_types.FETCH_VIDEO,\r\n    payload: video\r\n  }\r\n}\r\n\r\nexport function clearVideoData() {\r\n  return {\r\n    type: action_types.CLEAR_VIDEO\r\n  }\r\n}\r\n\r\nexport function fetchVideos(folderId) {\r\n  return dispatch => {\r\n    return putio.recursiveVideos(folderId, (video) => {\r\n      dispatch(videosFetched(video))\r\n    })\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport Explorer from 'components/explorer'\r\nimport { DEFAULT_FOLDER_KEY } from '../constants'\r\n\r\nclass Settings extends Component {\r\n\r\n  getDefaultFolder() {\r\n    return localStorage.getItem(DEFAULT_FOLDER_KEY)\r\n  }\r\n\r\n  selectHandler(file) {\r\n    localStorage.setItem(DEFAULT_FOLDER_KEY, file.id)\r\n    this.forceUpdate()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h3>Select a folder to browse:</h3>\r\n        <Explorer\r\n          config={{ fileType: \"FOLDER\" }}\r\n          selectHandler={this.selectHandler.bind(this)}\r\n          selectedId={this.getDefaultFolder()}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Settings","import { TMDB_TOKEN, TMDB_API_BASE } from '../constants'\r\n\r\nfunction req(path, params, cb) {\r\n  params['api_key'] = TMDB_TOKEN\r\n  fetch(\r\n    TMDB_API_BASE + path + '?' + new URLSearchParams(params)\r\n  )\r\n    .then(response => response.json())\r\n    .then(cb)\r\n}\r\n\r\nexport function search(name, year, cb) {\r\n  req(\r\n    'search/movie',\r\n    {\r\n      'query': name,\r\n      'year': year,\r\n      'include_adult': false\r\n    },\r\n    (data) => { process_search(name, data, cb) }\r\n  )\r\n}\r\n\r\nfunction process_search(name, data, cb) {\r\n  if (data.total_results === 1)\r\n    return cb(data.results[0])\r\n\r\n  name = name.toUpperCase()\r\n  var filtered = data.results.filter(\r\n    item => {\r\n      return (\r\n        item.title.toUpperCase() === name ||\r\n        item.original_title.toUpperCase() === name\r\n      )\r\n    }\r\n  )\r\n  // not found\r\n  if (filtered.length === 0)\r\n    return cb(null)\r\n\r\n  // exact match\r\n  if (filtered.length === 1)\r\n    return cb(filtered[0])\r\n\r\n  // multi result, choose most voted\r\n  return cb(\r\n    filtered.reduce(\r\n      (a, b) => a.vote_count > b.vote_count ? a : b\r\n    )\r\n  )\r\n}\r\n\r\nexport function getMovie(id, cb) {\r\n  req(\r\n    'movie/' + id,\r\n    { 'append_to_response': 'videos' },\r\n    cb\r\n  )\r\n}\r\n\r\nexport function getCast(id, cb) {\r\n  req('movie/' + id + '/credits', {}, cb)\r\n}","import React, { Component } from 'react'\r\nimport { search as tmdbSearch, getMovie, getCast } from 'lib/tmdb'\r\nimport {\r\n  PUTIO_VIDEO_URL,\r\n  TMDB_BACKDROP_BASE,\r\n  TMDB_POSTER_BASE,\r\n  TMDB_ACTOR_BASE,\r\n  YOUTUBE_ICON,\r\n  IMDB_ICON\r\n} from '../constants'\r\n\r\nclass Movie extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.movie = { found: false }\r\n  }\r\n\r\n  toggleCast() {\r\n    this.isCastVisible = !this.isCastVisible\r\n    this.forceUpdate()\r\n  }\r\n\r\n  parseTitle() {\r\n    var title = this.props.data.name\r\n    var removeChars = ['.', '(', ')', ':', '1080p']\r\n    const regex = /(..*?)([0-9]{4})/gi\r\n\r\n    var cleanTitle = title\r\n    for (let rChar of removeChars)\r\n      cleanTitle = cleanTitle.replaceAll(rChar, ' ')\r\n\r\n    const match = cleanTitle.match(regex)\r\n    if (!match)\r\n      return false\r\n\r\n    var foundTitle = match[0].trim().slice(0, -4).trim()\r\n    var foundYear = match[0].trim().slice(-4).trim()\r\n    return {\r\n      'title': foundTitle,\r\n      'year': foundYear\r\n    }\r\n  }\r\n\r\n  applyCast(result) {\r\n    this.movie = Object.assign(this.movie, result)\r\n    this.movie.done = true\r\n    this.forceUpdate()\r\n  }\r\n\r\n  applyMedia(result) {\r\n    this.movie = Object.assign(this.movie, result)\r\n    getCast(this.movie.id, this.applyCast.bind(this))\r\n  }\r\n\r\n  applyTMDB(result) {\r\n    if (result)\r\n      result.found = true\r\n    else\r\n      return\r\n    this.movie = Object.assign(this.movie, result)\r\n    getMovie(this.movie.id, this.applyMedia.bind(this))\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.movie = this.parseTitle()\r\n    if (this.movie) {\r\n      tmdbSearch(\r\n        this.movie.title,\r\n        this.movie.year,\r\n        this.applyTMDB.bind(this)\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.props.data\r\n\r\n    if (!this.movie.found || !this.movie.done) {\r\n      return (\r\n        <div className=\"movie\">\r\n          <h1>\r\n            <a\r\n              href={PUTIO_VIDEO_URL + this.props.data.id}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              {data.name}\r\n            </a>\r\n          </h1>\r\n        </div>\r\n      )\r\n    }\r\n\r\n\r\n    var backdropUrl = TMDB_BACKDROP_BASE +\r\n      (this.movie.backdrop_path || this.movie.poster_path)\r\n\r\n    return (\r\n      <div\r\n        className=\"movie\"\r\n        style={{ backgroundImage: \"url(\" + backdropUrl + \")\" }}\r\n      >\r\n        <h1>\r\n          <a\r\n            href={PUTIO_VIDEO_URL + this.props.data.id}\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            <span>{this.movie.title} ({this.movie.year})</span>\r\n            {this.movie.title !== this.movie.original_title && (\r\n              <span className=\"originalTitle\">\r\n                {this.movie.original_title}\r\n              </span>\r\n            )}\r\n          </a>\r\n\r\n          <div className=\"vote\">\r\n            <span>★ {this.movie.vote_average}</span>\r\n          </div>\r\n\r\n          <div className=\"genres\">\r\n            {this.movie.genres.map(genre => {\r\n              return (\r\n                <span className=\"genre\" key={genre.id}>\r\n                  {genre.name}\r\n                </span>\r\n              )\r\n            })}\r\n          </div>\r\n        </h1>\r\n\r\n        <img\r\n          className=\"poster\"\r\n          alt={this.movie.name + ' Poster'}\r\n          src={TMDB_POSTER_BASE + this.movie.poster_path}\r\n        />\r\n\r\n        <div className=\"overview\">\r\n          <span>{this.movie.overview}</span>\r\n        </div>\r\n\r\n        <div className=\"links\">\r\n          {\r\n            this.movie.imdb_id && (\r\n              <a\r\n                className=\"imdb\"\r\n                href={\r\n                  \"https://www.imdb.com/title/\" +\r\n                  this.movie.imdb_id + \"/\"\r\n                }\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n              >\r\n                <img src={IMDB_ICON} alt=\"View on IMDb\" />\r\n              </a>\r\n            )\r\n          }\r\n\r\n          {\r\n            this.movie.videos.results\r\n              .filter(video => {\r\n                return (\r\n                  video.type === 'Trailer' &&\r\n                  video.site === 'YouTube'\r\n                )\r\n              })\r\n              .map(video => {\r\n                return <a\r\n                  className=\"youtube\"\r\n                  key={video.id}\r\n                  href={\"https://youtu.be/\" + video.key}\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  <img src={YOUTUBE_ICON} alt=\"Watch Trailer\" />\r\n                </a>\r\n              })\r\n          }\r\n        </div>\r\n\r\n        <div className=\"clearfix\"></div>\r\n        {this.movie.cast.length > 0 && (\r\n          <div className={\r\n            'cast' +\r\n            (this.isCastVisible ? ' visible' : '')\r\n          }>\r\n            {this.movie.cast.slice(0, 5).map(actor => {\r\n              return <div className=\"actor\" key={actor.id}>\r\n                {actor.profile_path &&\r\n                  <img\r\n                    src={TMDB_ACTOR_BASE + actor.profile_path}\r\n                    alt={actor.name}\r\n                  />\r\n                }\r\n                {actor.name}\r\n              </div>\r\n            })}\r\n          </div>\r\n        )}\r\n        <div className=\"clearfix\"></div>\r\n\r\n        {this.movie.cast.length > 0 && (\r\n          <div\r\n            className=\"castToggle\"\r\n            onClick={this.toggleCast.bind(this)}\r\n          >\r\n            <span>{\r\n              this.isCastVisible ?\r\n                '⇑ Hide' :\r\n                '⇓ Show'\r\n            } Cast</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Movie","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { fetchVideos } from 'actions/videos'\r\nimport { DEFAULT_FOLDER_KEY } from '../constants'\r\nimport Movie from 'components/movie'\r\n\r\n\r\nclass BrowserBare extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchVideos(this.getDefaultFolderId())\r\n  }\r\n\r\n  getDefaultFolderId() {\r\n    return localStorage.getItem(DEFAULT_FOLDER_KEY)\r\n  }\r\n\r\n  getVideos() {\r\n    if (Object.keys(this.props.data).length === 0)\r\n      return false\r\n\r\n    if (!this.props.data)\r\n      return false\r\n\r\n    return Object.values(this.props.data).sort(\r\n      (a, b) => b.created_at.localeCompare(a.created_at)\r\n    )\r\n  }\r\n\r\n  isFolderSet() {\r\n    return !!localStorage.getItem(DEFAULT_FOLDER_KEY)\r\n  }\r\n\r\n  render() {\r\n    if (!this.isFolderSet())\r\n      return <Redirect to=\"/settings\" />\r\n\r\n    var videos = this.getVideos()\r\n\r\n    if (!videos)\r\n      return 'Loading...'\r\n\r\n    return (\r\n      <div id=\"moviesWrapper\">\r\n        {videos.map(video => {\r\n          return <Movie key={video.id} data={video} />\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// redux\r\nconst mapStateToProps = (state) => ({\r\n  data: state.video\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  fetchVideos\r\n}\r\n\r\nconst Browser = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(BrowserBare)\r\n\r\nexport default Browser","import React, { Component } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport UserBox from \"components/user-box\"\r\nimport { fetchUser } from \"actions/user\"\r\nimport Settings from \"components/settings\"\r\nimport Browser from \"components/browser\"\r\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\"\r\n\r\nclass AppBare extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchUser()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router basename=\"/\">\r\n        <div id=\"App\">\r\n          <div id=\"header\">\r\n            <Link to=\"/\">\r\n              <div id=\"logo\" className=\"logoText logoLeft\">\r\n                PUTFLIX\r\n              </div>\r\n            </Link>\r\n            <UserBox user={this.props.user} />\r\n          </div>\r\n          <Route exact path=\"/\" component={Browser} />\r\n          <Route exact path=\"/settings\" component={Settings} />\r\n        </div>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\n// redux\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  fetchUser,\r\n}\r\n\r\nconst App = connect(mapStateToProps, mapDispatchToProps)(AppBare)\r\n\r\nexport default App\r\n","import action_types from 'actions'\r\nimport putio from 'lib/putio'\r\n\r\nexport function userFetched(data) {\r\n  return {\r\n    type: action_types.FETCH_USER,\r\n    payload: {\r\n      data,\r\n      loading: false\r\n    }\r\n  }\r\n}\r\n\r\nexport function fetchUser() {\r\n  return dispatch => {\r\n    return putio.User.Info()\r\n      .then(resp => {\r\n        dispatch(userFetched(resp.data.info))\r\n      })\r\n  }\r\n}","import React from 'react'\r\n\r\nfunction Homepage(props) {\r\n  return (\r\n    <div id=\"home\">\r\n      <div id=\"logo\" className=\"logoText\">PUTFLIX</div>\r\n      Putflix lists movies in your Put.io account with\r\n      relevant information like plot and categories.\r\n      <br />\r\n      <a id=\"connectPutio\" href={props.authUrl}>Connect with Put.io</a>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Homepage","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store'\r\nimport './style/index.css'\r\nimport App from './app'\r\nimport OAuth2 from 'lib/oauth2'\r\nimport { PUTIO_AUTH_URL, PUTIO_CLIENT_ID } from './constants'\r\nimport putio from 'lib/putio'\r\nimport Homepage from 'components/homepage'\r\n\r\nconst oauth2 = new OAuth2({\r\n  'client_id': PUTIO_CLIENT_ID,\r\n  'auth_url': PUTIO_AUTH_URL\r\n})\r\n\r\nif (oauth2.isLoggedIn())\r\n  putio.setToken(oauth2.getToken())\r\n\r\noauth2.handleCallback(() => window.location.href = '/putflix')\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    {oauth2.isLoggedIn()\r\n      ? (\r\n        <App />\r\n      ) : (\r\n        <Homepage authUrl={oauth2.getAuthUrl()} />\r\n      )}\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)","class OAuth2 {\r\n  constructor(config) {\r\n    this.config = config\r\n    this._state_key = 'oauth2_state'\r\n    this._access_token_key = 'oauth2_access_token'\r\n  }\r\n\r\n  isLoggedIn() {\r\n    return localStorage.getItem(this._access_token_key)\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem(this._access_token_key)\r\n  }\r\n\r\n  _getState() {\r\n    var state = localStorage.getItem(this._state_key)\r\n    if (state === null) {\r\n      state = Math.random().toString(32).substring(2)\r\n      localStorage.setItem(this._state_key, state)\r\n    }\r\n    return state\r\n  }\r\n\r\n  getAuthUrl(response_type = 'token') {\r\n    var params = new URLSearchParams({\r\n      'response_type': response_type,\r\n      'client_id': this.config.client_id,\r\n      'state': this._getState()\r\n    })\r\n\r\n    return this.config.auth_url + '?' + params.toString()\r\n  }\r\n\r\n  handleCallback(cb) {\r\n    // check state existence and match\r\n    var params = new URLSearchParams(window.location.search)\r\n    if (params.get('state') === null)\r\n      return false\r\n\r\n    // return access_token\r\n    var hashParams = new URLSearchParams(window.location.hash)\r\n    var token = hashParams.get('access_token')\r\n    localStorage.setItem(this._access_token_key, token)\r\n    cb()\r\n    return true\r\n  }\r\n}\r\n\r\nexport default OAuth2"],"sourceRoot":""}